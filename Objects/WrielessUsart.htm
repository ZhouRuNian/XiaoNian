<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\WrielessUsart.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\WrielessUsart.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Sep 30 16:46:13 2022
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
UART0_IRQHandler &rArr; Uart0_IRQHandler &rArr; AutoReceiveUartReaderSourceData &rArr; UpgradeReplyCommandCreate &rArr; Get_Crc8_LookUp
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_IRQHandler</a> from interrupts_hc32l13x.o(i.ADC_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[25]">CLKTRIM_IRQHandler</a> from interrupts_hc32l13x.o(i.CLKTRIM_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[a]">DMAC_IRQHandler</a> from interrupts_hc32l13x.o(i.DMAC_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[24]">FLASH_RAM_IRQHandler</a> from interrupts_hc32l13x.o(i.FLASH_RAM_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from interrupts_hc32l13x.o(i.HardFault_Handler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[12]">I2C0_IRQHandler</a> from interrupts_hc32l13x.o(i.I2C0_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[13]">I2C1_IRQHandler</a> from interrupts_hc32l13x.o(i.I2C1_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[23]">LCD_IRQHandler</a> from interrupts_hc32l13x.o(i.LCD_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[17]">LPTIM_IRQHandler</a> from interrupts_hc32l13x.o(i.LPTIM_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[e]">LPUART0_IRQHandler</a> from interrupts_hc32l13x.o(i.LPUART0_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[f]">LPUART1_IRQHandler</a> from interrupts_hc32l13x.o(i.LPUART1_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[22]">LVD_IRQHandler</a> from interrupts_hc32l13x.o(i.LVD_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1b]">PCA_IRQHandler</a> from interrupts_hc32l13x.o(i.PCA_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1f]">PCNT_IRQHandler</a> from interrupts_hc32l13x.o(i.PCNT_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[6]">PORTA_IRQHandler</a> from interrupts_hc32l13x.o(i.PORTA_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[7]">PORTB_IRQHandler</a> from interrupts_hc32l13x.o(i.PORTB_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[8]">PORTC_IRQHandler</a> from interrupts_hc32l13x.o(i.PORTC_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[9]">PORTD_IRQHandler</a> from interrupts_hc32l13x.o(i.PORTD_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from interrupts_hc32l13x.o(i.RTC_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from interrupts_hc32l13x.o(i.SPI0_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from interrupts_hc32l13x.o(i.SPI1_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from interrupts_hc32l13x.o(i.SysTick_Handler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_hc32l13x.o(i.SystemInit) referenced from startup_hc32l13x.o(.text)
 <LI><a href="#[14]">TIM0_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM0_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[15]">TIM1_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM1_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[16]">TIM2_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM2_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[b]">TIM3_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM3_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[18]">TIM4_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM4_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[19]">TIM5_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM5_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1a]">TIM6_IRQHandler</a> from interrupts_hc32l13x.o(i.TIM6_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[c]">UART0_IRQHandler</a> from interrupts_hc32l13x.o(i.UART0_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[d]">UART1_IRQHandler</a> from interrupts_hc32l13x.o(i.UART1_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[20]">VC0_IRQHandler</a> from interrupts_hc32l13x.o(i.VC0_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[21]">VC1_IRQHandler</a> from interrupts_hc32l13x.o(i.VC1_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1c]">WDT_IRQHandler</a> from interrupts_hc32l13x.o(i.WDT_IRQHandler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_hc32l13x.o(.text)
 <LI><a href="#[26]">main</a> from system_hc32l13x.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[35]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bf]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c0]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c1]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c2]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c3]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[bc]"></a>MSR_MSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flash_iap.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_load_app
</UL>

<P><STRONG><a name="[c4]"></a>WFI_SET</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, flash_iap.o(.emb_text), UNUSED)

<P><STRONG><a name="[bd]"></a>INTX_DISABLE</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash_iap.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[6d]"></a>INTX_ENABLE</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash_iap.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10us
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeReplyCommandCreate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0ForWordSendData
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromReadImportantInfo
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[ca]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2f]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[cb]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, system_hc32l13x.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = main &rArr; $Super$$main &rArr; StartUpInit &rArr; LowPowerModeConfig &rArr; USART2Init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>AutoEmptyUART0ReceiveBuf</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, uart_main.o(i.AutoEmptyUART0ReceiveBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AutoEmptyUART0ReceiveBuf &rArr; EmptyUART0ReceiveBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyUART0ReceiveBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTMainDeal
</UL>

<P><STRONG><a name="[3a]"></a>AutoReceiveUartReaderSourceData</STRONG> (Thumb, 1796 bytes, Stack size 48 bytes, uart_reader.o(i.AutoReceiveUartReaderSourceData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = AutoReceiveUartReaderSourceData &rArr; UpgradeReplyCommandCreate &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeReplyCommandCreate
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyUART0ReceiveBuf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDAutoLamp
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc8_LookUp
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>AutoTurnOnDiscernLightDeal</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, uart_main.o(i.AutoTurnOnDiscernLightDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AutoTurnOnDiscernLightDeal &rArr; USART1ControlLight &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1ControlLight
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTMainDeal
</UL>

<P><STRONG><a name="[99]"></a>Bt_ClearIntFlag</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, bt.o(i.Bt_ClearIntFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Bt_ClearIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim0_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[98]"></a>Bt_GetIntFlag</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bt.o(i.Bt_GetIntFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Bt_GetIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim0_IRQHandler
</UL>

<P><STRONG><a name="[9b]"></a>Bt_M0_ARRSet</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, bt.o(i.Bt_M0_ARRSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Bt_M0_ARRSet
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[9c]"></a>Bt_M0_Cnt16Set</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, bt.o(i.Bt_M0_Cnt16Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Bt_M0_Cnt16Set
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[9e]"></a>Bt_M0_Run</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bt.o(i.Bt_M0_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bt_M0_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[83]"></a>Bt_M0_Stop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bt.o(i.Bt_M0_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bt_M0_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpAllMcuIoInit
</UL>

<P><STRONG><a name="[9d]"></a>Bt_Mode0_EnableIrq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bt.o(i.Bt_Mode0_EnableIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bt_Mode0_EnableIrq
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[9a]"></a>Bt_Mode0_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, bt.o(i.Bt_Mode0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Bt_Mode0_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[25]"></a>CLKTRIM_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.CLKTRIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLKTRIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkTrim_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CheckVoltageIOInit</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, voltage.o(i.CheckVoltageIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CheckVoltageIOInit &rArr; Gpio_EnableIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableNvic
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_EnableIrq
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[47]"></a>CheckVoltageIO_LEVEL_READ</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, voltage.o(i.CheckVoltageIO_LEVEL_READ))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckVoltageIO_LEVEL_READ &rArr; Gpio_GetInputIO
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_GetInputIO
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[a]"></a>DMAC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.DMAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMAC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dmac_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>Delay_ms</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, delay.o(i.Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[4b]"></a>Delay_us</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(i.Delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[4c]"></a>DiscernPowerControl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, voltage.o(i.DiscernPowerControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DiscernPowerControl &rArr; DiscernPowerIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetIO
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClrIO
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[4d]"></a>DiscernPowerIOInit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, voltage.o(i.DiscernPowerIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DiscernPowerIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerControl
</UL>

<P><STRONG><a name="[a8]"></a>Dma_ClrStat</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dmac.o(i.Dma_ClrStat))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_AutoClrStat
</UL>

<P><STRONG><a name="[a7]"></a>Dma_DisableChannel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dmac.o(i.Dma_DisableChannel))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_AutoClrStat
</UL>

<P><STRONG><a name="[a9]"></a>Dma_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dmac.o(i.Dma_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_Init
</UL>

<P><STRONG><a name="[ab]"></a>Dma_EnableChannel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dmac.o(i.Dma_EnableChannel))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_Init
</UL>

<P><STRONG><a name="[a6]"></a>Dma_GetStat</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dmac.o(i.Dma_GetStat))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_AutoClrStat
</UL>

<P><STRONG><a name="[aa]"></a>Dma_InitChannel</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dmac.o(i.Dma_InitChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dma_InitChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_Init
</UL>

<P><STRONG><a name="[50]"></a>EepromInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, eeprom.o(i.EepromInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EepromInit &rArr; Flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashSize
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromSaveImportantInfo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[53]"></a>EepromReadImportantInfo</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, eeprom.o(i.EepromReadImportantInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EepromReadImportantInfo &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc8_LookUp
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[54]"></a>EepromSaveImportantInfo</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, eeprom.o(i.EepromSaveImportantInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = EepromSaveImportantInfo &rArr; EepromInit &rArr; Flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc8_LookUp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromInit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[39]"></a>EmptyUART0ReceiveBuf</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, uart_main.o(i.EmptyUART0ReceiveBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EmptyUART0ReceiveBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReceiveUartReaderSourceData
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoEmptyUART0ReceiveBuf
</UL>

<P><STRONG><a name="[46]"></a>EnableNvic</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, interrupts_hc32l13x.o(i.EnableNvic))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EnableNvic &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIOInit
</UL>

<P><STRONG><a name="[24]"></a>FLASH_RAM_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.FLASH_RAM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_RAM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ram_IRQHandler (Weak Reference)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>FlashWriteData</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, eeprom.o(i.FlashWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FlashWriteData &rArr; Flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReceiveUartReaderSourceData
</UL>

<P><STRONG><a name="[52]"></a>Flash_Init</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, flash.o(i.Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Flash_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromSaveImportantInfo
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromInit
</UL>

<P><STRONG><a name="[5c]"></a>Flash_LockAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, flash.o(i.Flash_LockAll))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
</UL>

<P><STRONG><a name="[55]"></a>Flash_SectorErase</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, flash.o(i.Flash_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_UnlockAll
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_LockAll
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromSaveImportantInfo
</UL>

<P><STRONG><a name="[5b]"></a>Flash_UnlockAll</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flash.o(i.Flash_UnlockAll))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WriteHalfWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
</UL>

<P><STRONG><a name="[7e]"></a>Flash_WaitCycle</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, flash.o(i.Flash_WaitCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_WaitCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
</UL>

<P><STRONG><a name="[56]"></a>Flash_WriteHalfWord</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, flash.o(i.Flash_WriteHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Flash_WriteHalfWord
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_UnlockAll
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_LockAll
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromSaveImportantInfo
</UL>

<P><STRONG><a name="[5f]"></a>GetBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ddl.o(i.GetBit))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lptim_GetItStatus
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_GetIrqStatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_GetInputIO
</UL>

<P><STRONG><a name="[51]"></a>GetFlashSize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, eeprom.o(i.GetFlashSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetFlashSize
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromInit
</UL>

<P><STRONG><a name="[3b]"></a>Get_Crc8_LookUp</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, crc-8.o(i.Get_Crc8_LookUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_Crc8_LookUp
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeReplyCommandCreate
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReceiveUartReaderSourceData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1ControlLight
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromSaveImportantInfo
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromReadImportantInfo
</UL>

<P><STRONG><a name="[5d]"></a>Gpio_ClearIrq</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gpio.o(i.Gpio_ClearIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gpio_ClearIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortB_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>Gpio_ClrIO</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gpio.o(i.Gpio_ClrIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gpio_ClrIO &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDIOInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOnOrOff
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerControl
</UL>

<P><STRONG><a name="[45]"></a>Gpio_EnableIrq</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, gpio.o(i.Gpio_EnableIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Gpio_EnableIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIOInit
</UL>

<P><STRONG><a name="[48]"></a>Gpio_GetInputIO</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gpio.o(i.Gpio_GetInputIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gpio_GetInputIO
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIO_LEVEL_READ
</UL>

<P><STRONG><a name="[60]"></a>Gpio_GetIrqStatus</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gpio.o(i.Gpio_GetIrqStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gpio_GetIrqStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortB_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>Gpio_Init</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gpio.o(i.Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gpio_Init &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDIOInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIOInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpAllMcuIoInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerIOInit
</UL>

<P><STRONG><a name="[ac]"></a>Gpio_SetAfMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gpio.o(i.Gpio_SetAfMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Gpio_SetAfMode
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>

<P><STRONG><a name="[4e]"></a>Gpio_SetIO</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gpio.o(i.Gpio_SetIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Gpio_SetIO &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOnOrOff
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerControl
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>I2C0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>I2C1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LCD_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.LCD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>LEDAutoJump</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, led.o(i.LEDAutoJump))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LEDAutoJump &rArr; LEDOnOrOff &rArr; LEDIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOnOrOff
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim0_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[3c]"></a>LEDAutoLamp</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, led.o(i.LEDAutoLamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LEDAutoLamp &rArr; LEDOnOrOff &rArr; LEDIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOnOrOff
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReceiveUartReaderSourceData
</UL>

<P><STRONG><a name="[66]"></a>LEDIOInit</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, led.o(i.LEDIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LEDIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClrIO
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOnOrOff
</UL>

<P><STRONG><a name="[65]"></a>LEDOnOrOff</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, led.o(i.LEDOnOrOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LEDOnOrOff &rArr; LEDIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetIO
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClrIO
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDAutoLamp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDAutoJump
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[17]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.LPTIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LPTIM_IRQHandler &rArr; LpTim_IRQHandler &rArr; CheckVoltageIO_LEVEL_READ &rArr; Gpio_GetInputIO
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.LPUART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpUart0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.LPUART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpUart1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LVD_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.LVD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LVD_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lvd_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LowPowerModeConfig</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, voltage.o(i.LowPowerModeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = LowPowerModeConfig &rArr; USART2Init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lpm_GotoDeepSleep
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClrIO
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_ENABLE
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerControl
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIOInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpAllMcuIoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[67]"></a>LpTim_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, voltage.o(i.LpTim_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LpTim_IRQHandler &rArr; CheckVoltageIO_LEVEL_READ &rArr; Gpio_GetInputIO
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lptim_GetItStatus
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lptim_ClrItStatus
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIO_LEVEL_READ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCURestart
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>Lpm_GotoDeepSleep</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lpm.o(i.Lpm_GotoDeepSleep))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
</UL>

<P><STRONG><a name="[71]"></a>Lptim_ClrItStatus</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lptim.o(i.Lptim_ClrItStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lptim_ClrItStatus &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim_IRQHandler
</UL>

<P><STRONG><a name="[70]"></a>Lptim_GetItStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lptim.o(i.Lptim_GetItStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lptim_GetItStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>MCURestart</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, main.o(i.MCURestart))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LpTim_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[1b]"></a>PCA_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.PCA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pca_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PCNT_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.PCNT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PCNT_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pcnt_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PORTA_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.PORTA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortA_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PORTB_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.PORTB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PORTB_IRQHandler &rArr; PortB_IRQHandler &rArr; Gpio_ClearIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortB_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PORTC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.PORTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PORTD_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.PORTD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTD_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortD_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>PortB_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, voltage.o(i.PortB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PortB_IRQHandler &rArr; Gpio_ClearIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_GetIrqStatus
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClearIrq
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTB_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>PortC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, voltage.o(i.PortC_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTC_IRQHandler
</UL>

<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rtc_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SetBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ddl.o(i.SetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lptim_ClrItStatus
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableIrq
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableFunc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_ClrStatus
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetIO
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_EnableIrq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClrIO
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClearIrq
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
</UL>

<P><STRONG><a name="[7c]"></a>SetSysClockConfig</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main.o(i.SetSysClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SetSysClockConfig &rArr; Sysctrl_ClkSourceEnable &rArr; delay10us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WaitCycle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SysClkSwitch
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPLLStableTime
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPLLFreq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_ClkSourceEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[6c]"></a>StartUpAllMcuIoInit</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, main.o(i.StartUpAllMcuIoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = StartUpAllMcuIoInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_M0_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
</UL>

<P><STRONG><a name="[84]"></a>StartUpInit</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, main.o(i.StartUpInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = StartUpInit &rArr; LowPowerModeConfig &rArr; USART2Init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogFeed
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOnOrOff
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDAutoJump
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_ENABLE
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromReadImportantInfo
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerControl
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIO_LEVEL_READ
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIOInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCURestart
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>Sysctrl_ClkSourceEnable</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, sysctrl.o(i.Sysctrl_ClkSourceEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Sysctrl_ClkSourceEnable &rArr; delay10us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10us
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SysctrlUnlock
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
</UL>

<P><STRONG><a name="[8c]"></a>Sysctrl_GetHClkFreq</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, sysctrl.o(i.Sysctrl_GetHClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Sysctrl_GetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetPClkFreq
</UL>

<P><STRONG><a name="[8e]"></a>Sysctrl_GetPClkFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sysctrl.o(i.Sysctrl_GetPClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Sysctrl_GetPClkFreq &rArr; Sysctrl_GetHClkFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>

<P><STRONG><a name="[7f]"></a>Sysctrl_SetPLLFreq</STRONG> (Thumb, 258 bytes, Stack size 20 bytes, sysctrl.o(i.Sysctrl_SetPLLFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sysctrl_SetPLLFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
</UL>

<P><STRONG><a name="[80]"></a>Sysctrl_SetPLLStableTime</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sysctrl.o(i.Sysctrl_SetPLLStableTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Sysctrl_SetPLLStableTime
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
</UL>

<P><STRONG><a name="[43]"></a>Sysctrl_SetPeripheralGate</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, sysctrl.o(i.Sysctrl_SetPeripheralGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDIOInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromInit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckVoltageIOInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpAllMcuIoInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscernPowerIOInit
</UL>

<P><STRONG><a name="[82]"></a>Sysctrl_SysClkSwitch</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sysctrl.o(i.Sysctrl_SysClkSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Sysctrl_SysClkSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SysctrlUnlock
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
</UL>

<P><STRONG><a name="[8f]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_hc32l13x.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SysClkSwitch
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, system_hc32l13x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HidePinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TIM0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TIM0_IRQHandler &rArr; Tim0_IRQHandler &rArr; LEDAutoJump &rArr; LEDOnOrOff &rArr; LEDIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim2_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM4_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim4_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM5_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim5_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim6_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>Tim0_IRQHandler</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, timer.o(i.Tim0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Tim0_IRQHandler &rArr; LEDAutoJump &rArr; LEDOnOrOff &rArr; LEDIOInit &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDAutoJump
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_GetIntFlag
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_ClearIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM0_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>Timer0Init</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, timer.o(i.Timer0Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Timer0Init &rArr; EnableNvic &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableNvic
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_Mode0_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_Mode0_EnableIrq
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_M0_Run
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_M0_Cnt16Set
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_M0_ARRSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bt_ClearIntFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[c]"></a>UART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = UART0_IRQHandler &rArr; Uart0_IRQHandler &rArr; AutoReceiveUartReaderSourceData &rArr; UpgradeReplyCommandCreate &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>UARTMainDeal</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, uart_main.o(i.UARTMainDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UARTMainDeal &rArr; USART2Init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_AutoClrStat
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0ForWordSendData
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTurnOnDiscernLightDeal
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoEmptyUART0ReceiveBuf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[a3]"></a>USART0ForWordSendData</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uart_main.o(i.USART0ForWordSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART0ForWordSendData &rArr; USART0_TX_DMA_Init &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTMainDeal
</UL>

<P><STRONG><a name="[a2]"></a>USART0_TX_DMA_AutoClrStat</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uart_main.o(i.USART0_TX_DMA_AutoClrStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART0_TX_DMA_AutoClrStat
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dma_GetStat
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dma_DisableChannel
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dma_ClrStat
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTMainDeal
</UL>

<P><STRONG><a name="[a5]"></a>USART0_TX_DMA_Init</STRONG> (Thumb, 106 bytes, Stack size 64 bytes, uart_main.o(i.USART0_TX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART0_TX_DMA_Init &rArr; Sysctrl_SetPeripheralGate &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dma_InitChannel
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dma_EnableChannel
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dma_Enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0ForWordSendData
</UL>

<P><STRONG><a name="[40]"></a>USART1ControlLight</STRONG> (Thumb, 488 bytes, Stack size 16 bytes, uart_main.o(i.USART1ControlLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1ControlLight &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc8_LookUp
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoTurnOnDiscernLightDeal
</UL>

<P><STRONG><a name="[6e]"></a>USART2Init</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, uart_main.o(i.USART2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USART2Init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ddl_memclr
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableNvic
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetPeripheralGate
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetPClkFreq
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableIrq
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableFunc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_ClrStatus
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_SetAfMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_ClrIO
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTMainDeal
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModeConfig
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[9f]"></a>Uart0_IRQHandler</STRONG> (Thumb, 390 bytes, Stack size 8 bytes, uart_main.o(i.Uart0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Uart0_IRQHandler &rArr; AutoReceiveUartReaderSourceData &rArr; UpgradeReplyCommandCreate &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_ReceiveData
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetStatus
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_ClrStatus
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReceiveUartReaderSourceData
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[ae]"></a>Uart_ClrStatus</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, uart.o(i.Uart_ClrStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart_ClrStatus &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>

<P><STRONG><a name="[b0]"></a>Uart_EnableFunc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uart.o(i.Uart_EnableFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart_EnableFunc &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>

<P><STRONG><a name="[af]"></a>Uart_EnableIrq</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uart.o(i.Uart_EnableIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart_EnableIrq &rArr; SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>

<P><STRONG><a name="[b1]"></a>Uart_GetStatus</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uart.o(i.Uart_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Uart_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>Uart_Init</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, uart.o(i.Uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_EnableFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
</UL>

<P><STRONG><a name="[b2]"></a>Uart_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.Uart_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>UpgradeReplyCommandCreate</STRONG> (Thumb, 344 bytes, Stack size 144 bytes, uart_reader.o(i.UpgradeReplyCommandCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = UpgradeReplyCommandCreate &rArr; Get_Crc8_LookUp
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc8_LookUp
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReceiveUartReaderSourceData
</UL>

<P><STRONG><a name="[20]"></a>VC0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.VC0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VC0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vc0_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>VC1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.VC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VC1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vc1_IRQHandler (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WDT_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.WDT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WDT_IRQHandler &rArr; Wdt_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>WatchDogFeed</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, iwdg.o(i.WatchDogFeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WatchDogFeed
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[86]"></a>WatchDogInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, iwdg.o(i.WatchDogInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WatchDogInit &rArr; EnableNvic &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableNvic
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
</UL>

<P><STRONG><a name="[b7]"></a>Wdt_Feed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, iwdg.o(i.Wdt_Feed))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogFeed
</UL>

<P><STRONG><a name="[b6]"></a>Wdt_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, iwdg.o(i.Wdt_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Wdt_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_IrqClr
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCURestart
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_IRQHandler
</UL>

<P><STRONG><a name="[b9]"></a>Wdt_IrqClr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, iwdg.o(i.Wdt_IrqClr))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>Wdt_Start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, iwdg.o(i.Wdt_Start))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit
</UL>

<P><STRONG><a name="[8a]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sysctrl.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_GetHClkFreq
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_ClkSourceEnable
</UL>

<P><STRONG><a name="[cc]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cd]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ce]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[7d]"></a>ddl_memclr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ddl.o(i.ddl_memclr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ddl_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_TX_DMA_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockConfig
</UL>

<P><STRONG><a name="[8b]"></a>delay10us</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ddl.o(i.delay10us))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = delay10us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_ClkSourceEnable
</UL>

<P><STRONG><a name="[bb]"></a>iap_load_app</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, flash_iap.o(i.iap_load_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iap_load_app
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSR_MSP
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[36]"></a>$Super$$main</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = $Super$$main &rArr; StartUpInit &rArr; LowPowerModeConfig &rArr; USART2Init &rArr; Uart_Init &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_load_app
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wdt_Feed
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTMainDeal
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_ENABLE
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_DISABLE
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromSaveImportantInfo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartUpAllMcuIoInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCURestart
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[57]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, interrupts_hc32l13x.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableNvic
</UL>

<P><STRONG><a name="[90]"></a>_HidePinInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system_hc32l13x.o(i._HidePinInit))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[89]"></a>_SysctrlUnlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sysctrl.o(i._SysctrlUnlock))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SysClkSwitch
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_ClkSourceEnable
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[37]"></a>Adc_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>ClkTrim_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKTRIM_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>Dmac_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMAC_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>Flash_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_RAM_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>I2c0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>I2c1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>Lcd_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>LpUart0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>LpUart1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>Lvd_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>Pca_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCA_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>Pcnt_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCNT_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>PortA_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTA_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>PortD_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTD_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>Ram_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_RAM_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>Rtc_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>Spi0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>Spi1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>SysTick_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[92]"></a>Tim1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>Tim2_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>Tim3_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>Tim4_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>Tim5_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[97]"></a>Tim6_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>Uart1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>Vc0_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VC0_IRQHandler
</UL>

<P><STRONG><a name="[b5]"></a>Vc1_IRQHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VC1_IRQHandler
</UL>
<HR></body></html>
